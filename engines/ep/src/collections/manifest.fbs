//
//     Copyright 2020-Present Couchbase, Inc.
//
//   Use of this software is governed by the Business Source License included
//   in the file licenses/BSL-Couchbase.txt.  As of the Change Date specified
//   in that file, in accordance with the Business Source License, use of this
//   software will be governed by the Apache License, Version 2.0, included in
//   the file licenses/APL2.txt.
//

//
// Flatbuffer types used in the serialisation of the Collections::Manifest
// object. These are used to store as a file a copy of the current manifest
// and use it in warm-up.
//
namespace Collections;

// Compact form of the historyID, this is a 128bit uuid
struct FlatbufferHistoryID {
    data0:uint64;
    data1:uint64;
}

table FlatbufferManifestGID {
   revision:ulong;
   historyId:FlatbufferHistoryID;
}

// VBuckets store the ID
root_type FlatbufferManifestGID;

namespace Collections.Persist;

table Collection {
    collectionId:uint;
    ttlValid:bool;
    maxTtl:uint;
    name:string;
}

table Scope {
    scopeId:uint;
    name:string;
    collections:[Collection];
}

table Manifest {
   id:FlatbufferManifestGID;
   scopes:[Scope];
}

table ManifestWithCrc {
   crc:uint;
   manifest:[ubyte];
}

// This is the main type representing a Collections::Manifest
root_type Manifest;
// This wraps the flatbuffer Manifest with a CRC for integrity checking
root_type ManifestWithCrc;
