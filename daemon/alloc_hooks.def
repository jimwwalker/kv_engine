
/* X-macros for static methods making up an alloc hooks class.
 * macro arguments:
 *    method_name
 *    return_type
 *    arguments
 *
 * Example usage:
 *
 *   class MyAllocHooks {
 *   public:
 *       #define X(name, ret, args) static ret name args;
 *       #include "alloc_hooks.def"
 *       #undef X
 *   };
 */

#if !defined(X)
#error define an X(name, ret, args) macro before including this file.
#endif

X(initialize, void, ())
X(get_extra_stats_size, int, ())
X(get_allocator_stats, void, (allocator_stats* stats))
X(get_allocation_size, size_t, (const void* ptr))
X(get_detailed_stats, void, (char* buffer, int size))
X(release_free_memory, void, ())
X(enable_thread_cache, bool, (bool enable))
X(get_allocator_property, bool, (const char* name, size_t* value))
X(set_allocator_property, int, (const char* name, void* newp, size_t newlen))
